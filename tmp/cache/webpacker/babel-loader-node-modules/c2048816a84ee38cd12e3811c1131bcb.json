{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"@hotwired/stimulus\";\nimport Inputmask from \"inputmask\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      console.log(\"Form Controller connected\");\n    }\n  }, {\n    key: \"changeSalary\",\n    value: function changeSalary() {\n      var salary = parseFloat(this.salaryTarget.value.replace(/[^\\d,]/g, '').replace(',', '.'));\n      var inss = this.calculateINSS(salary);\n      this.inssTarget.value = inss.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n    }\n  }, {\n    key: \"calculateINSS\",\n    value: function calculateINSS(salary) {\n      if (salary <= 1212) return salary * 0.075;else if (salary <= 2427.35) return salary * 0.09;else if (salary <= 3641.03) return salary * 0.12;else return Math.min(salary * 0.14, 877.24);\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      var _this = this;\n\n      var cep = this.postal_codeTarget.value.replace(/\\D/g, '');\n      var url = \"https://viacep.com.br/ws/\".concat(cep, \"/json/\");\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (!data.erro) {\n          _this.stateTarget.value = data.uf;\n          _this.cityTarget.value = data.localidade;\n          _this.neighborhoodTarget.value = data.bairro;\n          _this.addressTarget.value = data.logradouro;\n        } else {\n          console.error(\"CEP not found.\");\n        }\n      })[\"catch\"](function (error) {\n        return console.error('Error fetching address:', error);\n      });\n    }\n  }, {\n    key: \"maskCPF\",\n    value: function maskCPF(event) {\n      Inputmask({\n        mask: '999.999.999-99'\n      }).mask(event.target);\n    }\n  }, {\n    key: \"maskPhone\",\n    value: function maskPhone(event) {\n      Inputmask({\n        mask: '(99) 99999-9999'\n      }).mask(event.target);\n    }\n  }, {\n    key: \"maskCep\",\n    value: function maskCep(event) {\n      Inputmask({\n        mask: '99999-999'\n      }).mask(event.target);\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = ['salary', 'inss', 'postal_code', 'state', 'city', 'neighborhood', 'address'];\nexport { _default as default };","map":{"version":3,"sources":["/inss-discount-app/app/javascript/controllers/form_controller.js"],"names":["Controller","Inputmask","console","log","salary","parseFloat","salaryTarget","value","replace","inss","calculateINSS","inssTarget","toLocaleString","style","currency","Math","min","cep","postal_codeTarget","url","fetch","then","response","json","data","erro","stateTarget","uf","cityTarget","localidade","neighborhoodTarget","bairro","addressTarget","logradouro","error","event","mask","target","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;;;;;;;;;;;;;WAKE,mBAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;;WAED,wBAAe;AACb,UAAMC,MAAM,GAAGC,UAAU,CAAC,KAAKC,YAAL,CAAkBC,KAAlB,CAAwBC,OAAxB,CAAgC,SAAhC,EAA2C,EAA3C,EAA+CA,OAA/C,CAAuD,GAAvD,EAA4D,GAA5D,CAAD,CAAzB;AACA,UAAMC,IAAI,GAAG,KAAKC,aAAL,CAAmBN,MAAnB,CAAb;AACA,WAAKO,UAAL,CAAgBJ,KAAhB,GAAwBE,IAAI,CAACG,cAAL,CAAoB,OAApB,EAA6B;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAA7B,CAAxB;AACD;;;WAED,uBAAcV,MAAd,EAAsB;AACpB,UAAIA,MAAM,IAAI,IAAd,EAAoB,OAAOA,MAAM,GAAG,KAAhB,CAApB,KACK,IAAIA,MAAM,IAAI,OAAd,EAAuB,OAAOA,MAAM,GAAG,IAAhB,CAAvB,KACA,IAAIA,MAAM,IAAI,OAAd,EAAuB,OAAOA,MAAM,GAAG,IAAhB,CAAvB,KACA,OAAOW,IAAI,CAACC,GAAL,CAASZ,MAAM,GAAG,IAAlB,EAAwB,MAAxB,CAAP;AACN;;;WAED,sBAAa;AAAA;;AACX,UAAMa,GAAG,GAAG,KAAKC,iBAAL,CAAuBX,KAAvB,CAA6BC,OAA7B,CAAqC,KAArC,EAA4C,EAA5C,CAAZ;AACA,UAAMW,GAAG,sCAA+BF,GAA/B,WAAT;AAEAG,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,YAAI,CAACA,IAAI,CAACC,IAAV,EAAgB;AACd,UAAA,KAAI,CAACC,WAAL,CAAiBnB,KAAjB,GAAyBiB,IAAI,CAACG,EAA9B;AACA,UAAA,KAAI,CAACC,UAAL,CAAgBrB,KAAhB,GAAwBiB,IAAI,CAACK,UAA7B;AACA,UAAA,KAAI,CAACC,kBAAL,CAAwBvB,KAAxB,GAAgCiB,IAAI,CAACO,MAArC;AACA,UAAA,KAAI,CAACC,aAAL,CAAmBzB,KAAnB,GAA2BiB,IAAI,CAACS,UAAhC;AACD,SALD,MAKO;AACL/B,UAAAA,OAAO,CAACgC,KAAR,CAAc,gBAAd;AACD;AACF,OAXH,WAYS,UAAAA,KAAK;AAAA,eAAIhC,OAAO,CAACgC,KAAR,CAAc,yBAAd,EAAyCA,KAAzC,CAAJ;AAAA,OAZd;AAaD;;;WAED,iBAAQC,KAAR,EAAe;AACblC,MAAAA,SAAS,CAAC;AAAEmC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAT,CAAsCA,IAAtC,CAA2CD,KAAK,CAACE,MAAjD;AACD;;;WAED,mBAAUF,KAAV,EAAiB;AACflC,MAAAA,SAAS,CAAC;AAAEmC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAT,CAAuCA,IAAvC,CAA4CD,KAAK,CAACE,MAAlD;AACD;;;WAED,iBAAQF,KAAR,EAAe;AACblC,MAAAA,SAAS,CAAC;AAAEmC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAT,CAAiCA,IAAjC,CAAsCD,KAAK,CAACE,MAA5C;AACD;;;;EAjD0BrC,U;;SACpBsC,O,GAAU,CAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,cAAnD,EAAmE,SAAnE,C","sourcesContent":["import { Controller } from \"@hotwired/stimulus\";\nimport Inputmask from \"inputmask\";\n\nexport default class extends Controller {\n  static targets = ['salary', 'inss', 'postal_code', 'state', 'city', 'neighborhood', 'address'];\n  \n  connect() {\n    console.log(\"Form Controller connected\");\n  }\n\n  changeSalary() {\n    const salary = parseFloat(this.salaryTarget.value.replace(/[^\\d,]/g, '').replace(',', '.'));\n    const inss = this.calculateINSS(salary);\n    this.inssTarget.value = inss.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n  }\n\n  calculateINSS(salary) {\n    if (salary <= 1212) return salary * 0.075;\n    else if (salary <= 2427.35) return salary * 0.09;\n    else if (salary <= 3641.03) return salary * 0.12;\n    else return Math.min(salary * 0.14, 877.24);\n  }\n\n  getAddress() {\n    const cep = this.postal_codeTarget.value.replace(/\\D/g, '');\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (!data.erro) {\n          this.stateTarget.value = data.uf;\n          this.cityTarget.value = data.localidade;\n          this.neighborhoodTarget.value = data.bairro;\n          this.addressTarget.value = data.logradouro;\n        } else {\n          console.error(\"CEP not found.\");\n        }\n      })\n      .catch(error => console.error('Error fetching address:', error));\n  }\n\n  maskCPF(event) {\n    Inputmask({ mask: '999.999.999-99' }).mask(event.target);\n  }\n\n  maskPhone(event) {\n    Inputmask({ mask: '(99) 99999-9999' }).mask(event.target);\n  }\n\n  maskCep(event) {\n    Inputmask({ mask: '99999-999' }).mask(event.target);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}